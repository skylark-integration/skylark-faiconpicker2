{"version":3,"sources":["IconPicker.js"],"names":["define","skylark","langx","$","Widget","allIcons","_helpers","isElement","selector","length","IconPicker","inherit","klassName","pluginName","options","title","selected","defaultValue","placement","collision","animation","hideOnSelect","showFooter","searchInFooter","mustAccept","selectedCustomClass","icons","fullClassFormatter","val","input","inputSearch","container","component","templates","popover","footer","buttons","search","iconpicker","iconpickerItem","_construct","element","this","addClass","extend","data","originalPlacement","is","parent","isDropdownMenu","find","_createPopover","_createIconpicker","getAcceptButton","isInputGroup","append","_id","getUID","_bindElementEvents","_bindWindowEvents","update","isInline","show","_title","hasSeparatedSearchInput","remove","_footer","_self","itemClickFn","e","$this","trigger","iconpickerValue","hide","$itemElementTemplate","$elementsToAppend","i","itemElement","clone","on","attr","searchTerms","j","push","_isEventInsideIconpicker","_t","target","hasClass","parents","getSearchInput","filter","toLowerCase","get","getCancelButton","stopPropagation","hasComponent","toggle","hasInput","inArray","keyCode","_updateFormGroupStatus","getValid","value","$doc","window","document","_eventNs","updatePlacement","_unbindElementEvents","off","hasContainer","_unbindWindowEvents","_pos","at","my","of","within","removeClass","position","css","display","width","offset","left","top","right","bottom","maxWidth","_updateComponents","replace","icn","html","getHtml","isValid","isString","isEmpty","trim","setValue","_val","setSourceValue","getSourceValue","undefined","isInputSearch","filterText","found","each","text","regex","RegExp","match","batch","not","setTimeout","proxy","updateOnlyInternal","destroy","removeData","disable","prop","enable","isDisabled","method","args","Array","prototype","slice","call","arguments","$inst","plugin","apply","attach"],"mappings":"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","file":"../IconPicker.js","sourcesContent":["define([\n    \"skylark-langx/skylark\",\n    \"skylark-langx/langx\",\n    \"skylark-domx-query\",\n    \"skylark-widgets-base/Widget\",\n    \"./allIcons\"\n],function(skylark,langx, $, Widget,allIcons) {\n    'use strict';\n\n    var _helpers = {\n\n        isElement: function(selector) {\n            return ($(selector).length > 0);\n        },\n\n    };\n\n    var IconPicker = Widget.inherit({\n        klassName : \"IconPicker\",\n\n        pluginName : \"lark.iconpicker\",\n\n        options : {\n            title: false, // Popover title (optional) only if specified in the template\n            selected: false, // use this value as the current item and ignore the original\n            defaultValue: false, // use this value as the current item if input or element value is empty\n            placement: 'bottom', // (has some issues with auto and CSS). auto, top, bottom, left, right\n            collision: 'none', // If true, the popover will be repositioned to another position when collapses with the window borders\n            animation: true, // fade in/out on show/hide ?\n            //hide iconpicker automatically when a value is picked. it is ignored if mustAccept is not false and the accept button is visible\n            hideOnSelect: false,\n            showFooter: false,\n            searchInFooter: false, // If true, the search will be added to the footer instead of the title\n            mustAccept: false, // only applicable when there's an iconpicker-btn-accept button in the popover footer\n            selectedCustomClass: 'bg-primary', // Appends this class when to the selected item\n            icons: allIcons, // list of icon classes \n            fullClassFormatter: function(val) {\n                return val;\n            },\n            input: 'input,.iconpicker-input', // children input selector\n            inputSearch: false, // use the input as a search box too?\n            container: false, //  Appends the popover to a specific element. If not set, the selected element or element parent is used\n            component: '.input-group-addon,.iconpicker-component', // children component jQuery selector or object, relative to the container element\n            // Plugin templates:\n            templates: {\n                popover: '<div class=\"iconpicker-popover popover\"><div class=\"arrow\"></div>' +\n                    '<div class=\"popover-title\"></div><div class=\"popover-content\"></div></div>',\n                footer: '<div class=\"popover-footer\"></div>',\n                buttons: '<button class=\"iconpicker-btn iconpicker-btn-cancel btn btn-default btn-sm\">Cancel</button>' +\n                    ' <button class=\"iconpicker-btn iconpicker-btn-accept btn btn-primary btn-sm\">Accept</button>',\n                search: '<input type=\"search\" class=\"form-control iconpicker-search\" placeholder=\"Type to filter\" />',\n                iconpicker: '<div class=\"iconpicker\"><div class=\"iconpicker-items\"></div></div>',\n                iconpickerItem: '<a role=\"button\" href=\"javascript:;\" class=\"iconpicker-item\"><i></i></a>',\n            }\n        },\n\n        _construct : function(element, options) {\n            this.element = $(element).addClass('iconpicker-element');\n\n            this.options = langx.extend(true,{}, this.options, this.element.data(), options);\n            this.options.originalPlacement = this.options.placement;\n            // Iconpicker container element\n            this.container = (_helpers.isElement(this.options.container) ? $(this.options.container) : false);\n            if (this.container === false) {\n                if (this.element.is('.dropdown-toggle')) {\n                    this.container = $('~ .dropdown-menu:first', this.element);\n                } else {\n                    this.container = (this.element.is('input,textarea,button,.btn') ? this.element.parent() : this.element);\n                }\n            }\n            this.container.addClass('iconpicker-container');\n\n            if (this.isDropdownMenu()) {\n                this.options.placement = 'inline';\n            }\n\n            // Is the element an input? Should we search inside for any input?\n            this.input = (this.element.is('input,textarea') ? this.element.addClass('iconpicker-input') : false);\n            if (this.input === false) {\n                this.input = (this.container.find(this.options.input));\n                if (!this.input.is('input,textarea')) {\n                    this.input = false;\n                }\n            }\n\n            // Plugin as component ?\n            this.component = this.isDropdownMenu() ? this.container.parent().find(this.options.component) : this.container.find(this.options.component);\n            if (this.component.length === 0) {\n                this.component = false;\n            } else {\n                this.component.find('i').addClass('iconpicker-component');\n            }\n\n            // Create popover and iconpicker HTML\n            this._createPopover();\n            this._createIconpicker();\n\n            if (this.getAcceptButton().length === 0) {\n                // disable this because we don't have accept buttons\n                this.options.mustAccept = false;\n            }\n\n            // Avoid CSS issues with input-group-addon(s)\n            if (this.isInputGroup()) {\n                this.container.parent().append(this.popover);\n            } else {\n                this.container.append(this.popover);\n            }\n\n            this._id = this.getUID();\n            \n            // Bind events\n            this._bindElementEvents();\n            this._bindWindowEvents();\n\n            // Refresh everything\n            this.update(this.options.selected);\n\n            if (this.isInline()) {\n                this.show();\n            }\n        },\n\n\n        _createPopover: function() {\n            this.popover = $(this.options.templates.popover);\n\n            // title (header)\n            var _title = this.popover.find('.popover-title');\n            if (!!this.options.title) {\n                _title.append($('<div class=\"popover-title-text\">' + this.options.title + '</div>'));\n            }\n            if (this.hasSeparatedSearchInput() && !this.options.searchInFooter) {\n                _title.append(this.options.templates.search);\n            } else if (!this.options.title) {\n                _title.remove();\n            }\n\n            // footer\n            if (this.options.showFooter && this.options.templates.footer) {\n                var _footer = $(this.options.templates.footer);\n                if (this.hasSeparatedSearchInput() && this.options.searchInFooter) {\n                    _footer.append($(this.options.templates.search));\n                }\n                if (this.options.templates.buttons) {\n                    _footer.append($(this.options.templates.buttons));\n                }\n                this.popover.append(_footer);\n            }\n\n            if (this.options.animation === true) {\n                this.popover.addClass('fade');\n            }\n\n            return this.popover;\n        },\n        _createIconpicker: function() {\n            var _self = this;\n            this.iconpicker = $(this.options.templates.iconpicker);\n\n            var itemClickFn = function(e) {\n                var $this = $(this);\n                if ($this.is('i')) {\n                    $this = $this.parent();\n                }\n\n                if (_self.options.mustAccept === false) {\n                    _self.update($this.data('iconpickerValue'));\n                    _self.trigger('picked', {\n                        data: _self.iconpickerValue\n                    });\n\n                } else {\n                    _self.update($this.data('iconpickerValue'), true);\n                }\n\n                if (_self.options.hideOnSelect && (_self.options.mustAccept === false)) {\n                    // only hide when the accept button is not present\n                    _self.hide();\n                }\n            };\n\n            var $itemElementTemplate = $(this.options.templates.iconpickerItem);\n            var $elementsToAppend = [];\n            for (var i in this.options.icons) {\n                if (typeof this.options.icons[i].title === 'string') {\n                    var itemElement = $itemElementTemplate.clone();\n                    itemElement.find('i')\n                        .addClass(this.options.fullClassFormatter(this.options.icons[i].title));\n                    itemElement.data('iconpickerValue', this.options.icons[i].title)\n                        .on('click.iconpicker', itemClickFn);\n\n                    itemElement.attr('title', '.' + this.options.icons[i].title);\n                    if (this.options.icons[i].searchTerms.length > 0) {\n                        var searchTerms = '';\n                        for (var j = 0; j < this.options.icons[i].searchTerms.length; j++) {\n                            searchTerms = searchTerms + this.options.icons[i].searchTerms[j] + ' ';\n                        }\n                        itemElement.attr('data-search-terms', searchTerms);\n                    }\n                    $elementsToAppend.push(itemElement);\n                }\n            }\n            this.iconpicker.find('.iconpicker-items').append($elementsToAppend);\n            this.popover.find('.popover-content').append(this.iconpicker);\n\n            return this.iconpicker;\n        },\n        _isEventInsideIconpicker: function(e) {\n            var _t = $(e.target);\n            if ((!_t.hasClass('iconpicker-element') ||\n                    (_t.hasClass('iconpicker-element') && !_t.is(this.element))) &&\n                (_t.parents('.iconpicker-popover').length === 0)) {\n                return false;\n            }\n            return true;\n        },\n        _bindElementEvents: function() {\n            var _self = this;\n\n            this.getSearchInput().on('keyup.iconpicker', function() {\n                _self.filter($(this).val().toLowerCase());\n            });\n\n            this.getAcceptButton().on('click.iconpicker', function() {\n                var _picked = _self.iconpicker.find('.iconpicker-selected').get(0);\n\n                _self.update(_self.iconpickerValue);\n\n                _self.trigger('picked', {\n                    data: _self.iconpickerValue\n                });\n\n                if (!_self.isInline()) {\n                    _self.hide();\n                }\n            });\n            this.getCancelButton().on('click.iconpicker', function() {\n                if (!_self.isInline()) {\n                    _self.hide();\n                }\n            });\n\n            this.element.on('focus.iconpicker', function(e) {\n                _self.show();\n                e.stopPropagation();\n            });\n\n            if (this.hasComponent()) {\n                this.component.on('click.iconpicker', function() {\n                    _self.toggle();\n                });\n            }\n\n            if (this.hasInput()) {\n                // Bind input keyup event\n                this.input.on('keyup.iconpicker', function(e) {\n                    if (!_helpers.inArray(e.keyCode, [38, 40, 37, 39, 16, 17, 18, 9, 8, 91, 93, 20, 46, 186, 190, 46, 78, 188, 44, 86])) {\n                        _self.update();\n                    } else {\n                        _self._updateFormGroupStatus(_self.getValid(this.value) !== false);\n                    }\n                    if (_self.options.inputSearch === true) {\n                        _self.filter($(this).val().toLowerCase());\n                    }\n                    //_self.hide();\n                });\n            }\n\n        },\n        _bindWindowEvents: function() {\n            var $doc = $(window.document);\n            var _self = this;\n\n            // Add a namespace to the document events so they can be identified\n            // later for every instance separately\n            var _eventNs = '.iconpicker.inst' + this._id;\n\n            $(window).on('resize.iconpicker' + _eventNs + ' orientationchange.iconpicker' + _eventNs, function(e) {\n                // reposition popover\n                if (_self.popover.hasClass('in')) {\n                    _self.updatePlacement();\n                }\n            });\n\n            if (!_self.isInline()) {\n                $doc.on('mouseup' + _eventNs, function(e) {\n                    if (!_self._isEventInsideIconpicker(e) && !_self.isInline()) {\n                        _self.hide();\n                    }\n                });\n            }\n        },\n\n        \n        _unbindElementEvents: function() {\n            this.popover.off('.iconpicker');\n            this.element.off('.iconpicker');\n\n            if (this.hasInput()) {\n                this.input.off('.iconpicker');\n            }\n\n            if (this.hasComponent()) {\n                this.component.off('.iconpicker');\n            }\n\n            if (this.hasContainer()) {\n                this.container.off('.iconpicker');\n            }\n        },\n        _unbindWindowEvents: function() {\n            // destroy window and window.document bound events\n            $(window).off('.iconpicker.inst' + this._id);\n            $(window.document).off('.iconpicker.inst' + this._id);\n        },\n\n        updatePlacement: function(placement, collision) {\n            placement = placement || this.options.placement;\n            this.options.placement = placement; // set new placement\n            collision = collision || this.options.collision;\n            collision = (collision === true ? 'flip' : collision);\n\n            var _pos = {\n                // at: Defines which position (or side) on container element to align the\n                // popover element against: \"horizontal vertical\" alignment.\n                at: \"right bottom\",\n                // my: Defines which position (or side) on the popover being positioned to align\n                // with the container element: \"horizontal vertical\" alignment\n                my: \"right top\",\n                // of: Which element to position against.\n                of: (this.hasInput() && !this.isInputGroup()) ? this.input : this.container,\n                // collision: When the positioned element overflows the window (or within element)\n                // in some direction, move it to an alternative position.\n                collision: (collision === true ? 'flip' : collision),\n                // within: Element to position within, affecting collision detection.\n                within: window\n            };\n\n            // remove previous classes\n            this.popover.removeClass('inline topLeftCorner topLeft top topRight topRightCorner ' +\n                'rightTop right rightBottom bottomRight bottomRightCorner ' +\n                'bottom bottomLeft bottomLeftCorner leftBottom left leftTop');\n\n            if (typeof placement === 'object') {\n                // custom position ?\n                return this.popover.position(langx.extend({}, _pos, placement));\n            }\n\n            switch (placement) {\n                case 'inline':\n                    {\n                        _pos = false;\n                    }\n                    break;\n                case 'topLeftCorner':\n                    {\n                        _pos.my = 'right bottom';\n                        _pos.at = 'left top';\n                    }\n                    break;\n\n                case 'topLeft':\n                    {\n                        _pos.my = 'left bottom';\n                        _pos.at = 'left top';\n                    }\n                    break;\n\n                case 'top':\n                    {\n                        _pos.my = 'center bottom';\n                        _pos.at = 'center top';\n                    }\n                    break;\n\n                case 'topRight':\n                    {\n                        _pos.my = 'right bottom';\n                        _pos.at = 'right top';\n                    }\n                    break;\n\n                case 'topRightCorner':\n                    {\n                        _pos.my = 'left bottom';\n                        _pos.at = 'right top';\n                    }\n                    break;\n\n                case 'rightTop':\n                    {\n                        _pos.my = 'left bottom';\n                        _pos.at = 'right center';\n                    }\n                    break;\n\n                case 'right':\n                    {\n                        _pos.my = 'left center';\n                        _pos.at = 'right center';\n                    }\n                    break;\n\n                case 'rightBottom':\n                    {\n                        _pos.my = 'left top';\n                        _pos.at = 'right center';\n                    }\n                    break;\n\n                case 'bottomRightCorner':\n                    {\n                        _pos.my = 'left top';\n                        _pos.at = 'right bottom';\n                    }\n                    break;\n\n                case 'bottomRight':\n                    {\n                        _pos.my = 'right top';\n                        _pos.at = 'right bottom';\n                    }\n                    break;\n                case 'bottom':\n                    {\n                        _pos.my = 'center top';\n                        _pos.at = 'center bottom';\n                    }\n                    break;\n\n                case 'bottomLeft':\n                    {\n                        _pos.my = 'left top';\n                        _pos.at = 'left bottom';\n                    }\n                    break;\n\n                case 'bottomLeftCorner':\n                    {\n                        _pos.my = 'right top';\n                        _pos.at = 'left bottom';\n                    }\n                    break;\n\n                case 'leftBottom':\n                    {\n                        _pos.my = 'right top';\n                        _pos.at = 'left center';\n                    }\n                    break;\n\n                case 'left':\n                    {\n                        _pos.my = 'right center';\n                        _pos.at = 'left center';\n                    }\n                    break;\n\n                case 'leftTop':\n                    {\n                        _pos.my = 'right bottom';\n                        _pos.at = 'left center';\n                    }\n                    break;\n\n                default:\n                    {\n                        return false;\n                    }\n                    break;\n\n            }\n\n            this.popover.css({\n                'display': (this.options.placement === 'inline') ? '' : 'block'\n            });\n\n            if (_pos !== false) {\n                this.popover.position(_pos).css('maxWidth', $(window).width() - this.container.offset().left - 5);\n            } else {\n                //reset position\n                this.popover.css({\n                    'top': 'auto',\n                    'right': 'auto',\n                    'bottom': 'auto',\n                    'left': 'auto',\n                    'maxWidth': 'none'\n                });\n            }\n            this.popover.addClass(this.options.placement);\n\n            return true;\n        },\n        _updateComponents: function() {\n            // Update selected item\n            this.iconpicker.find('.iconpicker-item.iconpicker-selected')\n                .removeClass('iconpicker-selected ' + this.options.selectedCustomClass);\n\n            if (this.iconpickerValue) {\n                this.iconpicker.find('.' + this.options.fullClassFormatter(this.iconpickerValue).replace(/ /g, '.')).parent()\n                    .addClass('iconpicker-selected ' + this.options.selectedCustomClass);\n            }\n\n            // Update component item\n            if (this.hasComponent()) {\n                var icn = this.component.find('i');\n                if (icn.length > 0) {\n                    icn.attr('class', this.options.fullClassFormatter(this.iconpickerValue));\n                } else {\n                    this.component.html(this.getHtml());\n                }\n            }\n\n        },\n        _updateFormGroupStatus: function(isValid) {\n            if (this.hasInput()) {\n                if (isValid !== false) {\n                    // Remove form-group error class if any\n                    this.input.parents('.form-group:first').removeClass('has-error');\n                } else {\n                    this.input.parents('.form-group:first').addClass('has-error');\n                }\n                return true;\n            }\n            return false;\n        },\n        getValid: function(val) {\n            // here we must validate the value (you may change this validation\n            // to suit your needs\n            if (!langx.isString(val)) {\n                val = '';\n            }\n\n            var isEmpty = (val === '');\n\n            // trim string\n            val = langx.trim(val);\n            var e = false;\n            for (var i = 0; i < this.options.icons.length; i++) {\n                if (this.options.icons[i].title === val) {\n                    e = true;\n                    break;\n                };\n            }\n\n            if (e || isEmpty) {\n                return val;\n            }\n            return false;\n        },\n        /**\n         * Sets the internal item value and updates everything, excepting the input or element.\n         * For doing so, call setSourceValue() or update() instead\n         */\n        setValue: function(val) {\n            // sanitize first\n            var _val = this.getValid(val);\n            if (_val !== false) {\n                this.iconpickerValue = _val;\n\n                return this.iconpickerValue;\n            } else {\n\n                return false;\n            }\n        },\n        getHtml: function() {\n            return '<i class=\"' + this.options.fullClassFormatter(this.iconpickerValue) + '\"></i>';\n        },\n        /**\n         * Calls setValue and if it's a valid item value, sets the input or element value\n         */\n        setSourceValue: function(val) {\n            val = this.setValue(val);\n            if ((val !== false) && (val !== '')) {\n                if (this.hasInput()) {\n                    this.input.val(this.iconpickerValue);\n                } else {\n                    this.element.data('iconpickerValue', this.iconpickerValue);\n                }\n\n            }\n            return val;\n        },\n        /**\n         * Returns the input or element item value, without formatting, or defaultValue\n         * if it's empty string, undefined, false or null\n         * @param {type} defaultValue\n         * @returns string|mixed\n         */\n        getSourceValue: function(defaultValue) {\n            // returns the input or element value, as string\n            defaultValue = defaultValue || this.options.defaultValue;\n            var val = defaultValue;\n\n            if (this.hasInput()) {\n                val = this.input.val();\n            } else {\n                val = this.element.data('iconpickerValue');\n            }\n            if ((val === undefined) || (val === '') || (val === null) || (val === false)) {\n                // if not defined or empty, return default\n                val = defaultValue;\n            }\n            return val;\n        },\n        hasInput: function() {\n            return (this.input !== false);\n        },\n        isInputSearch: function() {\n            return (this.hasInput() && (this.options.inputSearch === true));\n        },\n        isInputGroup: function() {\n            return this.container.is('.input-group');\n        },\n        isDropdownMenu: function() {\n            return this.container.is('.dropdown-menu');\n        },\n        hasSeparatedSearchInput: function() {\n            return (this.options.templates.search !== false) && (!this.isInputSearch());\n        },\n        hasComponent: function() {\n            return (this.component !== false);\n        },\n        hasContainer: function() {\n            return (this.container !== false);\n        },\n        getAcceptButton: function() {\n            return this.popover.find('.iconpicker-btn-accept');\n        },\n        getCancelButton: function() {\n            return this.popover.find('.iconpicker-btn-cancel');\n        },\n        getSearchInput: function() {\n            return this.popover.find('.iconpicker-search');\n        },\n        filter: function(filterText) {\n            if (!filterText) {\n                this.iconpicker.find('.iconpicker-item').show();\n                return $(false);\n            } else {\n                var found = [];\n                this.iconpicker.find('.iconpicker-item').each(function() {\n                    var $this = $(this);\n                    var text = $this.attr('title').toLowerCase();\n                    var searchTerms = $this.attr('data-search-terms') ? $this.attr('data-search-terms').toLowerCase() : '';\n                    text = text + ' ' + searchTerms;\n                    var regex = false;\n                    try {\n                        regex = new RegExp('(^|\\\\W)' + filterText, 'g');\n                    } catch (e) {\n                        regex = false;\n                    }\n                    if ((regex !== false) && text.match(regex)) {\n                        found.push($this);\n                        $this.show();\n                    } else {\n                        $this.hide();\n                    }\n                });\n                return found;\n            }\n        },\n        show: function() {\n            if (this.popover.hasClass('in')) {\n                return false;\n            }\n            // hide other non-inline pickers\n            IconPicker.batch($('.iconpicker-popover.in:not(.inline)').not(this.popover), 'hide');\n\n            this.updatePlacement();\n            this.popover.addClass('in');\n            setTimeout(langx.proxy(function() {\n                this.popover.css('display', this.isInline() ? '' : 'block');\n\n            }, this), this.options.animation ? 300 : 1); // animation duration\n        },\n        hide: function() {\n            if (!this.popover.hasClass('in')) {\n                return false;\n            }\n\n            this.popover.removeClass('in');\n            setTimeout(langx.proxy(function() {\n                this.popover.css('display', 'none');\n                this.getSearchInput().val('');\n                this.filter(''); // clear filter\n\n            }, this), this.options.animation ? 300 : 1);\n        },\n        toggle: function() {\n            if (this.popover.is(\":visible\")) {\n                this.hide();\n            } else {\n                this.show(true);\n            }\n        },\n        update: function(val, updateOnlyInternal) {\n            val = (val ? val : this.getSourceValue(this.iconpickerValue));\n            // reads the input or element value again and tries to update the plugin\n            // fallback to the current selected item value\n\n            if (updateOnlyInternal === true) {\n                val = this.setValue(val);\n            } else {\n                val = this.setSourceValue(val);\n                this._updateFormGroupStatus(val !== false);\n            }\n\n            if (val !== false) {\n                this._updateComponents();\n            }\n\n            return val;\n        },\n        destroy: function() {\n\n            // unbinds events and resets everything to the initial state,\n            // including component mode\n            this.element.removeData('iconpicker').removeData('iconpickerValue').removeClass('iconpicker-element');\n\n            this._unbindElementEvents();\n            this._unbindWindowEvents();\n\n            $(this.popover).remove();\n\n        },\n        disable: function() {\n            if (this.hasInput()) {\n                this.input.prop('disabled', true);\n                return true;\n            }\n            return false;\n        },\n        enable: function() {\n            if (this.hasInput()) {\n                this.input.prop('disabled', false);\n                return true;\n            }\n            return false;\n        },\n        isDisabled: function() {\n            if (this.hasInput()) {\n                return (this.input.prop('disabled') === true);\n            }\n            return false;\n        },\n        isInline: function() {\n            return (this.options.placement === 'inline') || (this.popover.hasClass('inline'));\n        }\n\n    });\n  \n\n    IconPicker.batch = function(selector, method) {\n        var args = Array.prototype.slice.call(arguments, 2);\n        return $(selector).each(function() {\n            var $inst = $(this).plugin('lark.iconpicker');\n            if (!!$inst) {\n                $inst[method].apply($inst, args);\n            }\n        });\n    };\n\n\n    return skylark.attach(\"iwidgets.IconPicker\",IconPicker);\n});\n"]}