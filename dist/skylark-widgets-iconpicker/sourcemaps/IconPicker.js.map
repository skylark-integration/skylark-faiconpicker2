{"version":3,"sources":["IconPicker.js"],"names":["define","skylark","langx","$","Widget","allIcons","_helpers","isElement","selector","length","IconPicker","inherit","klassName","pluginName","options","title","selected","defaultValue","placement","collision","animation","hideOnSelect","showFooter","searchInFooter","mustAccept","selectedCustomClass","icons","fullClassFormatter","val","input","inputSearch","container","component","templates","popover","footer","buttons","search","iconpicker","iconpickerItem","_init","this","$element","_elm","addClass","originalPlacement","is","parent","isDropdownMenu","find","_createPopover","_createIconpicker","getAcceptButton","isInputGroup","append","_id","getUID","_bindElementEvents","_bindWindowEvents","update","isInline","show","_title","hasSeparatedSearchInput","remove","_footer","_self","itemClickFn","e","$this","data","emit","iconpickerValue","hide","$itemElementTemplate","$elementsToAppend","i","itemElement","clone","on","attr","searchTerms","j","push","_isEventInsideIconpicker","_t","target","hasClass","parents","getSearchInput","filter","toLowerCase","get","getCancelButton","stopPropagation","hasComponent","toggle","hasInput","inArray","keyCode","_updateFormGroupStatus","getValid","value","$doc","window","document","_eventNs","updatePlacement","_unbindElementEvents","off","hasContainer","_unbindWindowEvents","_pos","at","my","of","within","removeClass","position","extend","css","display","width","offset","left","top","right","bottom","maxWidth","_updateComponents","replace","icn","html","getHtml","isValid","isString","isEmpty","trim","setValue","_val","setSourceValue","getSourceValue","undefined","isInputSearch","filterText","found","each","text","regex","RegExp","match","batch","not","setTimeout","proxy","updateOnlyInternal","destroy","removeData","disable","prop","enable","isDisabled","method","args","Array","prototype","slice","call","arguments","$inst","plugin","apply","attach"],"mappings":"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","file":"../IconPicker.js","sourcesContent":["define([\n    \"skylark-langx/skylark\",\n    \"skylark-langx/langx\",\n    \"skylark-domx-query\",\n    \"skylark-widgets-base/Widget\",\n    \"./allIcons\"\n],function(skylark,langx, $, Widget,allIcons) {\n    'use strict';\n\n    var _helpers = {\n\n        isElement: function(selector) {\n            return ($(selector).length > 0);\n        },\n\n    };\n\n    var IconPicker = Widget.inherit({\n        klassName : \"IconPicker\",\n\n        pluginName : \"lark.iconpicker\",\n\n        options : {\n            title: false, // Popover title (optional) only if specified in the template\n            selected: false, // use this value as the current item and ignore the original\n            defaultValue: false, // use this value as the current item if input or element value is empty\n            placement: 'bottom', // (has some issues with auto and CSS). auto, top, bottom, left, right\n            collision: 'none', // If true, the popover will be repositioned to another position when collapses with the window borders\n            animation: true, // fade in/out on show/hide ?\n            //hide iconpicker automatically when a value is picked. it is ignored if mustAccept is not false and the accept button is visible\n            hideOnSelect: false,\n            showFooter: false,\n            searchInFooter: false, // If true, the search will be added to the footer instead of the title\n            mustAccept: false, // only applicable when there's an iconpicker-btn-accept button in the popover footer\n            selectedCustomClass: 'bg-primary', // Appends this class when to the selected item\n            icons: allIcons, // list of icon classes \n            fullClassFormatter: function(val) {\n                return val;\n            },\n            input: 'input,.iconpicker-input', // children input selector\n            inputSearch: false, // use the input as a search box too?\n            container: false, //  Appends the popover to a specific element. If not set, the selected element or element parent is used\n            component: '.input-group-addon,.iconpicker-component', // children component jQuery selector or object, relative to the container element\n            // Plugin templates:\n            templates: {\n                popover: '<div class=\"iconpicker-popover popover\"><div class=\"arrow\"></div>' +\n                    '<div class=\"popover-title\"></div><div class=\"popover-content\"></div></div>',\n                footer: '<div class=\"popover-footer\"></div>',\n                buttons: '<button class=\"iconpicker-btn iconpicker-btn-cancel btn btn-default btn-sm\">Cancel</button>' +\n                    ' <button class=\"iconpicker-btn iconpicker-btn-accept btn btn-primary btn-sm\">Accept</button>',\n                search: '<input type=\"search\" class=\"form-control iconpicker-search\" placeholder=\"Type to filter\" />',\n                iconpicker: '<div class=\"iconpicker\"><div class=\"iconpicker-items\"></div></div>',\n                iconpickerItem: '<a role=\"button\" href=\"javascript:;\" class=\"iconpicker-item\"><i></i></a>',\n            }\n        },\n\n        //_construct : function(element, options) {\n        _init : function() {\n            this.$element = $(this._elm).addClass('iconpicker-element');\n\n            //this.options = langx.extend(true,{}, this.options, this.element.data(), options);\n            this.options.originalPlacement = this.options.placement;\n\n            // Iconpicker container element\n            this.container = (_helpers.isElement(this.options.container) ? $(this.options.container) : false);\n            if (this.container === false) {\n                if (this.$element.is('.dropdown-toggle')) {\n                    this.container = $('~ .dropdown-menu:first', this.$element);\n                } else {\n                    this.container = (this.$element.is('input,textarea,button,.btn') ? this.$element.parent() : this.$element);\n                }\n            }\n            this.container.addClass('iconpicker-container');\n\n            if (this.isDropdownMenu()) {\n                this.options.placement = 'inline';\n            }\n\n            // Is the element an input? Should we search inside for any input?\n            this.input = (this.$element.is('input,textarea') ? this.$element.addClass('iconpicker-input') : false);\n            if (this.input === false) {\n                this.input = (this.container.find(this.options.input));\n                if (!this.input.is('input,textarea')) {\n                    this.input = false;\n                }\n            }\n\n            // Plugin as component ?\n            this.component = this.isDropdownMenu() ? this.container.parent().find(this.options.component) : this.container.find(this.options.component);\n            if (this.component.length === 0) {\n                this.component = false;\n            } else {\n                this.component.find('i').addClass('iconpicker-component');\n            }\n\n            // Create popover and iconpicker HTML\n            this._createPopover();\n            this._createIconpicker();\n\n            if (this.getAcceptButton().length === 0) {\n                // disable this because we don't have accept buttons\n                this.options.mustAccept = false;\n            }\n\n            // Avoid CSS issues with input-group-addon(s)\n            if (this.isInputGroup()) {\n                this.container.parent().append(this.popover);\n            } else {\n                this.container.append(this.popover);\n            }\n\n            this._id = this.getUID();\n            \n            // Bind events\n            this._bindElementEvents();\n            this._bindWindowEvents();\n\n            // Refresh everything\n            this.update(this.options.selected);\n\n            if (this.isInline()) {\n                this.show();\n            }\n        },\n\n\n        _createPopover: function() {\n            this.popover = $(this.options.templates.popover);\n\n            // title (header)\n            var _title = this.popover.find('.popover-title');\n            if (!!this.options.title) {\n                _title.append($('<div class=\"popover-title-text\">' + this.options.title + '</div>'));\n            }\n            if (this.hasSeparatedSearchInput() && !this.options.searchInFooter) {\n                _title.append(this.options.templates.search);\n            } else if (!this.options.title) {\n                _title.remove();\n            }\n\n            // footer\n            if (this.options.showFooter && this.options.templates.footer) {\n                var _footer = $(this.options.templates.footer);\n                if (this.hasSeparatedSearchInput() && this.options.searchInFooter) {\n                    _footer.append($(this.options.templates.search));\n                }\n                if (this.options.templates.buttons) {\n                    _footer.append($(this.options.templates.buttons));\n                }\n                this.popover.append(_footer);\n            }\n\n            if (this.options.animation === true) {\n                this.popover.addClass('fade');\n            }\n\n            return this.popover;\n        },\n        _createIconpicker: function() {\n            var _self = this;\n            this.iconpicker = $(this.options.templates.iconpicker);\n\n            var itemClickFn = function(e) {\n                var $this = $(this);\n                if ($this.is('i')) {\n                    $this = $this.parent();\n                }\n\n                if (_self.options.mustAccept === false) {\n                    _self.update($this.data('iconpickerValue'));\n                    _self.emit('picked', {\n                        data: _self.iconpickerValue\n                    });\n\n                } else {\n                    _self.update($this.data('iconpickerValue'), true);\n                }\n\n                if (_self.options.hideOnSelect && (_self.options.mustAccept === false)) {\n                    // only hide when the accept button is not present\n                    _self.hide();\n                }\n            };\n\n            var $itemElementTemplate = $(this.options.templates.iconpickerItem);\n            var $elementsToAppend = [];\n            for (var i in this.options.icons) {\n                if (typeof this.options.icons[i].title === 'string') {\n                    var itemElement = $itemElementTemplate.clone();\n                    itemElement.find('i')\n                        .addClass(this.options.fullClassFormatter(this.options.icons[i].title));\n                    itemElement.data('iconpickerValue', this.options.icons[i].title)\n                        .on('click.iconpicker', itemClickFn);\n\n                    itemElement.attr('title', '.' + this.options.icons[i].title);\n                    if (this.options.icons[i].searchTerms.length > 0) {\n                        var searchTerms = '';\n                        for (var j = 0; j < this.options.icons[i].searchTerms.length; j++) {\n                            searchTerms = searchTerms + this.options.icons[i].searchTerms[j] + ' ';\n                        }\n                        itemElement.attr('data-search-terms', searchTerms);\n                    }\n                    $elementsToAppend.push(itemElement);\n                }\n            }\n            this.iconpicker.find('.iconpicker-items').append($elementsToAppend);\n            this.popover.find('.popover-content').append(this.iconpicker);\n\n            return this.iconpicker;\n        },\n        _isEventInsideIconpicker: function(e) {\n            var _t = $(e.target);\n            if ((!_t.hasClass('iconpicker-element') ||\n                    (_t.hasClass('iconpicker-element') && !_t.is(this.$element))) &&\n                (_t.parents('.iconpicker-popover').length === 0)) {\n                return false;\n            }\n            return true;\n        },\n        _bindElementEvents: function() {\n            var _self = this;\n\n            this.getSearchInput().on('keyup.iconpicker', function() {\n                _self.filter($(this).val().toLowerCase());\n            });\n\n            this.getAcceptButton().on('click.iconpicker', function() {\n                var _picked = _self.iconpicker.find('.iconpicker-selected').get(0);\n\n                _self.update(_self.iconpickerValue);\n\n                _self.emit('picked', {\n                    data: _self.iconpickerValue\n                });\n\n                if (!_self.isInline()) {\n                    _self.hide();\n                }\n            });\n            this.getCancelButton().on('click.iconpicker', function() {\n                if (!_self.isInline()) {\n                    _self.hide();\n                }\n            });\n\n            this.$element.on('focus.iconpicker', function(e) {\n                _self.show();\n                e.stopPropagation();\n            });\n\n            if (this.hasComponent()) {\n                this.component.on('click.iconpicker', function() {\n                    _self.toggle();\n                });\n            }\n\n            if (this.hasInput()) {\n                // Bind input keyup event\n                this.input.on('keyup.iconpicker', function(e) {\n                    if (!_helpers.inArray(e.keyCode, [38, 40, 37, 39, 16, 17, 18, 9, 8, 91, 93, 20, 46, 186, 190, 46, 78, 188, 44, 86])) {\n                        _self.update();\n                    } else {\n                        _self._updateFormGroupStatus(_self.getValid(this.value) !== false);\n                    }\n                    if (_self.options.inputSearch === true) {\n                        _self.filter($(this).val().toLowerCase());\n                    }\n                    //_self.hide();\n                });\n            }\n\n        },\n        _bindWindowEvents: function() {\n            var $doc = $(window.document);\n            var _self = this;\n\n            // Add a namespace to the document events so they can be identified\n            // later for every instance separately\n            var _eventNs = '.iconpicker.inst' + this._id;\n\n            $(window).on('resize.iconpicker' + _eventNs + ' orientationchange.iconpicker' + _eventNs, function(e) {\n                // reposition popover\n                if (_self.popover.hasClass('in')) {\n                    _self.updatePlacement();\n                }\n            });\n\n            if (!_self.isInline()) {\n                $doc.on('mouseup' + _eventNs, function(e) {\n                    if (!_self._isEventInsideIconpicker(e) && !_self.isInline()) {\n                        _self.hide();\n                    }\n                });\n            }\n        },\n\n        \n        _unbindElementEvents: function() {\n            this.popover.off('.iconpicker');\n            this.$element.off('.iconpicker');\n\n            if (this.hasInput()) {\n                this.input.off('.iconpicker');\n            }\n\n            if (this.hasComponent()) {\n                this.component.off('.iconpicker');\n            }\n\n            if (this.hasContainer()) {\n                this.container.off('.iconpicker');\n            }\n        },\n        _unbindWindowEvents: function() {\n            // destroy window and window.document bound events\n            $(window).off('.iconpicker.inst' + this._id);\n            $(window.document).off('.iconpicker.inst' + this._id);\n        },\n\n        updatePlacement: function(placement, collision) {\n            placement = placement || this.options.placement;\n            this.options.placement = placement; // set new placement\n            collision = collision || this.options.collision;\n            collision = (collision === true ? 'flip' : collision);\n\n            var _pos = {\n                // at: Defines which position (or side) on container element to align the\n                // popover element against: \"horizontal vertical\" alignment.\n                at: \"right bottom\",\n                // my: Defines which position (or side) on the popover being positioned to align\n                // with the container element: \"horizontal vertical\" alignment\n                my: \"right top\",\n                // of: Which element to position against.\n                of: (this.hasInput() && !this.isInputGroup()) ? this.input : this.container,\n                // collision: When the positioned element overflows the window (or within element)\n                // in some direction, move it to an alternative position.\n                collision: (collision === true ? 'flip' : collision),\n                // within: Element to position within, affecting collision detection.\n                within: window\n            };\n\n            // remove previous classes\n            this.popover.removeClass('inline topLeftCorner topLeft top topRight topRightCorner ' +\n                'rightTop right rightBottom bottomRight bottomRightCorner ' +\n                'bottom bottomLeft bottomLeftCorner leftBottom left leftTop');\n\n            if (typeof placement === 'object') {\n                // custom position ?\n                return this.popover.position(langx.extend({}, _pos, placement));\n            }\n\n            switch (placement) {\n                case 'inline':\n                    {\n                        _pos = false;\n                    }\n                    break;\n                case 'topLeftCorner':\n                    {\n                        _pos.my = 'right bottom';\n                        _pos.at = 'left top';\n                    }\n                    break;\n\n                case 'topLeft':\n                    {\n                        _pos.my = 'left bottom';\n                        _pos.at = 'left top';\n                    }\n                    break;\n\n                case 'top':\n                    {\n                        _pos.my = 'center bottom';\n                        _pos.at = 'center top';\n                    }\n                    break;\n\n                case 'topRight':\n                    {\n                        _pos.my = 'right bottom';\n                        _pos.at = 'right top';\n                    }\n                    break;\n\n                case 'topRightCorner':\n                    {\n                        _pos.my = 'left bottom';\n                        _pos.at = 'right top';\n                    }\n                    break;\n\n                case 'rightTop':\n                    {\n                        _pos.my = 'left bottom';\n                        _pos.at = 'right center';\n                    }\n                    break;\n\n                case 'right':\n                    {\n                        _pos.my = 'left center';\n                        _pos.at = 'right center';\n                    }\n                    break;\n\n                case 'rightBottom':\n                    {\n                        _pos.my = 'left top';\n                        _pos.at = 'right center';\n                    }\n                    break;\n\n                case 'bottomRightCorner':\n                    {\n                        _pos.my = 'left top';\n                        _pos.at = 'right bottom';\n                    }\n                    break;\n\n                case 'bottomRight':\n                    {\n                        _pos.my = 'right top';\n                        _pos.at = 'right bottom';\n                    }\n                    break;\n                case 'bottom':\n                    {\n                        _pos.my = 'center top';\n                        _pos.at = 'center bottom';\n                    }\n                    break;\n\n                case 'bottomLeft':\n                    {\n                        _pos.my = 'left top';\n                        _pos.at = 'left bottom';\n                    }\n                    break;\n\n                case 'bottomLeftCorner':\n                    {\n                        _pos.my = 'right top';\n                        _pos.at = 'left bottom';\n                    }\n                    break;\n\n                case 'leftBottom':\n                    {\n                        _pos.my = 'right top';\n                        _pos.at = 'left center';\n                    }\n                    break;\n\n                case 'left':\n                    {\n                        _pos.my = 'right center';\n                        _pos.at = 'left center';\n                    }\n                    break;\n\n                case 'leftTop':\n                    {\n                        _pos.my = 'right bottom';\n                        _pos.at = 'left center';\n                    }\n                    break;\n\n                default:\n                    {\n                        return false;\n                    }\n                    break;\n\n            }\n\n            this.popover.css({\n                'display': (this.options.placement === 'inline') ? '' : 'block'\n            });\n\n            if (_pos !== false) {\n                this.popover.position(_pos).css('maxWidth', $(window).width() - this.container.offset().left - 5);\n            } else {\n                //reset position\n                this.popover.css({\n                    'top': 'auto',\n                    'right': 'auto',\n                    'bottom': 'auto',\n                    'left': 'auto',\n                    'maxWidth': 'none'\n                });\n            }\n            this.popover.addClass(this.options.placement);\n\n            return true;\n        },\n        _updateComponents: function() {\n            // Update selected item\n            this.iconpicker.find('.iconpicker-item.iconpicker-selected')\n                .removeClass('iconpicker-selected ' + this.options.selectedCustomClass);\n\n            if (this.iconpickerValue) {\n                this.iconpicker.find('.' + this.options.fullClassFormatter(this.iconpickerValue).replace(/ /g, '.')).parent()\n                    .addClass('iconpicker-selected ' + this.options.selectedCustomClass);\n            }\n\n            // Update component item\n            if (this.hasComponent()) {\n                var icn = this.component.find('i');\n                if (icn.length > 0) {\n                    icn.attr('class', this.options.fullClassFormatter(this.iconpickerValue));\n                } else {\n                    this.component.html(this.getHtml());\n                }\n            }\n\n        },\n        _updateFormGroupStatus: function(isValid) {\n            if (this.hasInput()) {\n                if (isValid !== false) {\n                    // Remove form-group error class if any\n                    this.input.parents('.form-group:first').removeClass('has-error');\n                } else {\n                    this.input.parents('.form-group:first').addClass('has-error');\n                }\n                return true;\n            }\n            return false;\n        },\n        getValid: function(val) {\n            // here we must validate the value (you may change this validation\n            // to suit your needs\n            if (!langx.isString(val)) {\n                val = '';\n            }\n\n            var isEmpty = (val === '');\n\n            // trim string\n            val = langx.trim(val);\n            var e = false;\n            for (var i = 0; i < this.options.icons.length; i++) {\n                if (this.options.icons[i].title === val) {\n                    e = true;\n                    break;\n                };\n            }\n\n            if (e || isEmpty) {\n                return val;\n            }\n            return false;\n        },\n        /**\n         * Sets the internal item value and updates everything, excepting the input or element.\n         * For doing so, call setSourceValue() or update() instead\n         */\n        setValue: function(val) {\n            // sanitize first\n            var _val = this.getValid(val);\n            if (_val !== false) {\n                this.iconpickerValue = _val;\n\n                return this.iconpickerValue;\n            } else {\n\n                return false;\n            }\n        },\n        getHtml: function() {\n            return '<i class=\"' + this.options.fullClassFormatter(this.iconpickerValue) + '\"></i>';\n        },\n        /**\n         * Calls setValue and if it's a valid item value, sets the input or element value\n         */\n        setSourceValue: function(val) {\n            val = this.setValue(val);\n            if ((val !== false) && (val !== '')) {\n                if (this.hasInput()) {\n                    this.input.val(this.iconpickerValue);\n                } else {\n                    this.$element.data('iconpickerValue', this.iconpickerValue);\n                }\n\n            }\n            return val;\n        },\n        /**\n         * Returns the input or element item value, without formatting, or defaultValue\n         * if it's empty string, undefined, false or null\n         * @param {type} defaultValue\n         * @returns string|mixed\n         */\n        getSourceValue: function(defaultValue) {\n            // returns the input or element value, as string\n            defaultValue = defaultValue || this.options.defaultValue;\n            var val = defaultValue;\n\n            if (this.hasInput()) {\n                val = this.input.val();\n            } else {\n                val = this.$element.data('iconpickerValue');\n            }\n            if ((val === undefined) || (val === '') || (val === null) || (val === false)) {\n                // if not defined or empty, return default\n                val = defaultValue;\n            }\n            return val;\n        },\n        hasInput: function() {\n            return (this.input !== false);\n        },\n        isInputSearch: function() {\n            return (this.hasInput() && (this.options.inputSearch === true));\n        },\n        isInputGroup: function() {\n            return this.container.is('.input-group');\n        },\n        isDropdownMenu: function() {\n            return this.container.is('.dropdown-menu');\n        },\n        hasSeparatedSearchInput: function() {\n            return (this.options.templates.search !== false) && (!this.isInputSearch());\n        },\n        hasComponent: function() {\n            return (this.component !== false);\n        },\n        hasContainer: function() {\n            return (this.container !== false);\n        },\n        getAcceptButton: function() {\n            return this.popover.find('.iconpicker-btn-accept');\n        },\n        getCancelButton: function() {\n            return this.popover.find('.iconpicker-btn-cancel');\n        },\n        getSearchInput: function() {\n            return this.popover.find('.iconpicker-search');\n        },\n        filter: function(filterText) {\n            if (!filterText) {\n                this.iconpicker.find('.iconpicker-item').show();\n                return $(false);\n            } else {\n                var found = [];\n                this.iconpicker.find('.iconpicker-item').each(function() {\n                    var $this = $(this);\n                    var text = $this.attr('title').toLowerCase();\n                    var searchTerms = $this.attr('data-search-terms') ? $this.attr('data-search-terms').toLowerCase() : '';\n                    text = text + ' ' + searchTerms;\n                    var regex = false;\n                    try {\n                        regex = new RegExp('(^|\\\\W)' + filterText, 'g');\n                    } catch (e) {\n                        regex = false;\n                    }\n                    if ((regex !== false) && text.match(regex)) {\n                        found.push($this);\n                        $this.show();\n                    } else {\n                        $this.hide();\n                    }\n                });\n                return found;\n            }\n        },\n        show: function() {\n            if (this.popover.hasClass('in')) {\n                return false;\n            }\n            // hide other non-inline pickers\n            IconPicker.batch($('.iconpicker-popover.in:not(.inline)').not(this.popover), 'hide');\n\n            this.updatePlacement();\n            this.popover.addClass('in');\n            setTimeout(langx.proxy(function() {\n                this.popover.css('display', this.isInline() ? '' : 'block');\n\n            }, this), this.options.animation ? 300 : 1); // animation duration\n        },\n        hide: function() {\n            if (!this.popover.hasClass('in')) {\n                return false;\n            }\n\n            this.popover.removeClass('in');\n            setTimeout(langx.proxy(function() {\n                this.popover.css('display', 'none');\n                this.getSearchInput().val('');\n                this.filter(''); // clear filter\n\n            }, this), this.options.animation ? 300 : 1);\n        },\n        toggle: function() {\n            if (this.popover.is(\":visible\")) {\n                this.hide();\n            } else {\n                this.show(true);\n            }\n        },\n        update: function(val, updateOnlyInternal) {\n            val = (val ? val : this.getSourceValue(this.iconpickerValue));\n            // reads the input or element value again and tries to update the plugin\n            // fallback to the current selected item value\n\n            if (updateOnlyInternal === true) {\n                val = this.setValue(val);\n            } else {\n                val = this.setSourceValue(val);\n                this._updateFormGroupStatus(val !== false);\n            }\n\n            if (val !== false) {\n                this._updateComponents();\n            }\n\n            return val;\n        },\n        destroy: function() {\n\n            // unbinds events and resets everything to the initial state,\n            // including component mode\n            this.$element.removeData('iconpicker').removeData('iconpickerValue').removeClass('iconpicker-element');\n\n            this._unbindElementEvents();\n            this._unbindWindowEvents();\n\n            $(this.popover).remove();\n\n        },\n        disable: function() {\n            if (this.hasInput()) {\n                this.input.prop('disabled', true);\n                return true;\n            }\n            return false;\n        },\n        enable: function() {\n            if (this.hasInput()) {\n                this.input.prop('disabled', false);\n                return true;\n            }\n            return false;\n        },\n        isDisabled: function() {\n            if (this.hasInput()) {\n                return (this.input.prop('disabled') === true);\n            }\n            return false;\n        },\n        isInline: function() {\n            return (this.options.placement === 'inline') || (this.popover.hasClass('inline'));\n        }\n\n    });\n  \n\n    IconPicker.batch = function(selector, method) {\n        var args = Array.prototype.slice.call(arguments, 2);\n        return $(selector).each(function() {\n            var $inst = $(this).plugin('lark.iconpicker');\n            if (!!$inst) {\n                $inst[method].apply($inst, args);\n            }\n        });\n    };\n\n\n    return skylark.attach(\"widgets.IconPicker\",IconPicker);\n});\n"]}